{"version":3,"sources":["apply-scope-in-params-reducer.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;;;IAEqB;AACnB,WADmB,oBACnB,CAAY,KAAZ,EAAmB,OAAnB,EAAuC;QAAX,8DAAQ,iBAAG;;0BADpB,sBACoB;;AACrC,SAAK,OAAL,GAAe,OAAf,CADqC;AAErC,SAAK,KAAL,GAAa,KAAb,CAFqC;AAGrC,SAAK,KAAL,GAAa,KAAb,CAHqC;GAAvC;;eADmB;;8BAOT,MAAM;AACd,UAAI,QAAQ,cAAc,KAAK,IAAL,CADZ;AAEd,UAAI,OAAO,KAAK,KAAL,CAAP,KAAuB,UAAvB,EAAmC;AACrC,eAAO,KAAK,KAAL,EAAY,IAAZ,CAAP,CADqC;OAAvC;AAGA,0BAAO,KAAP,EAAc,wCAAwC,KAAK,IAAL,CAAtD,CALc;;;;8CAQU,MAAM;;;AAC9B,UAAI,OAAO,KAAK,IAAL,IAAa,IAAb,GAAoB,IAApB,GAA2B,KAAK,SAAL,CAAe,KAAK,IAAL,CAA1C,CADmB;AAE9B,aAAO,oBAAS,kBAAT,EAA6B;AAClC,eAAO,KAAK,KAAL,CAAW,GAAX,CAAe;iBAAM,MAAK,SAAL,CAAe,EAAf;SAAN,CAAtB;AACA,kBAFkC;OAA7B,CAAP,CAF8B;;;;gDASJ,MAAM;AAChC,aAAO,oBAAS,oBAAT,EAA+B;AACpC,iBAAS,KAAK,SAAL,CAAe,KAAK,OAAL,CAAxB;AACA,cAAM,KAAK,IAAL;OAFD,CAAP,CADgC;;;;2CAOX,MAAM;;;AAC3B,aAAO,oBAAS,eAAT,EAA0B;AAC/B,oBAAY,KAAK,UAAL,CAAgB,GAAhB,CAAoB;iBAAQ,OAAK,SAAL,CAAe,IAAf;SAAR,CAAhC;OADK,CAAP,CAD2B;;;;uDAMM,MAAM;AACvC,aAAO,oBAAS,2BAAT,EAAsC;AAC3C,iBAAS,KAAK,SAAL,CAAe,KAAK,OAAL,CAAxB;AACA,cAAM,KAAK,IAAL;OAFD,CAAP,CADuC;;;;qDAOR,MAAM;AACrC,aAAO,oBAAS,yBAAT,EAAoC;AACzC,cAAM,KAAK,IAAL;AACN,iBAAS,KAAK,SAAL,CAAe,KAAK,OAAL,CAAxB;OAFK,CAAP,CADqC;;;;0CAOjB,MAAM;;;AAC1B,aAAO,oBAAS,cAAT,EAAyB;AAC9B,kBAAU,KAAK,QAAL,CAAc,GAAd,CAAkB;iBAAM,OAAK,SAAL,CAAe,EAAf;SAAN,CAA5B;AACA,qBAAa,KAAK,WAAL,IAAoB,IAApB,GAA2B,IAA3B,GAAkC,KAAK,SAAL,CAAe,KAAK,WAAL,CAAjD;OAFR,CAAP,CAD0B;;;;+CAOD,MAAM;AAC/B,UAAI,OAAO,KAAK,IAAL,CAAU,QAAV,CAAmB,KAAK,KAAL,EAAY,KAAK,OAAL,CAAa,QAAb,CAAtC,CAD2B;AAE/B,UAAI,aAAa,oBAAO,KAAK,GAAL,EAAP,CAAb,CAF2B;;AAI/B,WAAK,OAAL,CAAa,GAAb,CAAiB,GAAjB,CAAqB,WAAW,QAAX,EAArB,EAA4C,oCAAwB,IAAxB,CAA5C,EAJ+B;AAK/B,WAAK,OAAL,CAAa,QAAb,CAAsB,GAAtB,CAA0B,IAA1B,EAAgC;AAC9B,iBAAS,UAAT;AACA,eAAO,KAAK,KAAL;AACP,iBAAS,IAAT;OAHF,EAL+B;;AAW/B,aAAO,oBAAS,mBAAT,EAA8B,EAAE,UAAF,EAA9B,CAAP,CAX+B;;;;SA1Dd","file":"apply-scope-in-params-reducer.js","sourcesContent":["import Term from \"./terms\";\nimport { gensym } from \"./symbol\";\nimport { VarBindingTransform } from \"./transforms\";\nimport {assert} from './errors';\n\nexport default class ScopeApplyingReducer {\n  constructor(scope, context, phase = 0) {\n    this.context = context;\n    this.scope = scope;\n    this.phase = phase;\n  }\n\n  transform(term) {\n    let field = \"transform\" + term.type;\n    if (typeof this[field] === 'function') {\n      return this[field](term);\n    }\n    assert(false, \"transform not implemented yet for: \" + term.type);\n  }\n\n  transformFormalParameters(term) {\n    let rest = term.rest == null ? null : this.transform(term.rest);\n    return new Term('FormalParameters', {\n      items: term.items.map(it => this.transform(it)),\n      rest\n    });\n  }\n\n\n  transformBindingWithDefault(term) {\n    return new Term('BindingWithDefault', {\n      binding: this.transform(term.binding),\n      init: term.init\n    });\n  }\n\n  transformObjectBinding(term) {\n    return new Term('ObjectBinding', {\n      properties: term.properties.map(prop => this.transform(prop))\n    });\n  }\n\n  transformBindingPropertyIdentifier(term) {\n    return new Term('BindingPropertyIdentifier', {\n      binding: this.transform(term.binding),\n      init: term.init\n    });\n  }\n\n  transformBindingPropertyProperty(term) {\n    return new Term('BindingPropertyProperty', {\n      name: term.name,\n      binding: this.transform(term.binding)\n    });\n  }\n\n  transformArrayBinding(term) {\n    return new Term('ArrayBinding', {\n      elements: term.elements.map(el => this.transform(el)),\n      restElement: term.restElement == null ? null : this.transform(term.restElement)\n    });\n  }\n\n  transformBindingIdentifier(term) {\n    let name = term.name.addScope(this.scope, this.context.bindings);\n    let newBinding = gensym(name.val());\n\n    this.context.env.set(newBinding.toString(), new VarBindingTransform(name));\n    this.context.bindings.add(name, {\n      binding: newBinding,\n      phase: this.phase,\n      skipDup: true\n    });\n\n    return new Term(\"BindingIdentifier\", { name });\n  }\n}\n"],"sourceRoot":"/source/"}