{"version":3,"sources":["expander.js"],"names":[],"mappings":";;;;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;AACA;;IAAY;;;;;;;;IAGS;AACnB,WADmB,QACnB,CAAY,OAAZ,EAAqB;0BADF,UACE;;AACnB,SAAK,OAAL,GAAe,OAAf,CADmB;GAArB;;eADmB;;2BAKZ,MAAM;AACX,UAAI,gBAAgB,4BAAkB,KAAK,OAAL,CAAlC,CADO;AAEX,UAAI,eAAe,2BAAiB,KAAK,OAAL,CAAhC,CAFO;;AAIX,aAAO,EAAE,IAAF,CACL,EAAE,IAAF,CAAO,cAAc,MAAd,EAAsB,aAA7B,CADK,EAEL,EAAE,GAAF,CAAM;eAAK,aAAa,MAAb,CAAoB,CAApB;OAAL,CAFD,EAGL,IAHK,CAAP,CAJW;;;;SALM","file":"expander.js","sourcesContent":["import { List } from \"immutable\";\nimport TermExpander from \"./term-expander.js\";\nimport TokenExpander from './token-expander';\nimport { Scope, freshScope } from \"./scope\";\nimport * as _ from 'ramda';\n\n\nexport default class Expander {\n  constructor(context) {\n    this.context = context;\n  }\n\n  expand(stxl) {\n    let tokenExpander = new TokenExpander(this.context);\n    let termExpander = new TermExpander(this.context);\n\n    return _.pipe(\n      _.bind(tokenExpander.expand, tokenExpander),\n      _.map(t => termExpander.expand(t))\n    )(stxl);\n  }\n}\n"],"sourceRoot":"/source/"}